plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ggamangso'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //lombok 의존성 주입
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //사용자 config 설정들을 자동완성으로 보여줄수 있는
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    //devtools 의존성 주입
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // api를 자동으로 생성해주는 도구 spring data rest 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    // api를 볼 수 있는 data rest hal explorer 의존성 추가
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    // 서버사이드 뷰 템플릿 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    //Google STT API 라이브러리 주입
    implementation 'com.google.cloud:google-cloud-speech:4.28.0'

    //mysql, mariadb 의존성 주입
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'


    //
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //queryDSL 설정
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"



    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

//QueryDSL 설정부
def generated  = 'src/main/generated' //intellij IDEA build와 함께 사용할 때 생길수 있는 문제를 예방하기 위한 설정

//Querydsl Qclass 파일 생성 위치 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}
//java source set 에 querydsl Qclass 위치 추가
sourceSets{
    main.java.srcDirs += [ generated ]
}
//gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
